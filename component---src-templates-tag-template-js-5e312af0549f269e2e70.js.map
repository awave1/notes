{"version":3,"sources":["webpack:///./src/templates/TagTemplate.js","webpack:///./src/components/PostLink.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__","_components_PostLink__WEBPACK_IMPORTED_MODULE_4__","TagsTemplate","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","content","filter","edge","node","frontmatter","date","map","a","createElement","key","id","post","style","fontFamily","icon","faTags","to","styled_components__WEBPACK_IMPORTED_MODULE_2__","PostTitle","styled","h3","withConfig","displayName","componentId","PostContainer","div","props","theme","card","background","excerpt","slug","fields","_post$frontmatter","title","dangerouslySetInnerHTML","__html"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KA4BaI,EAAS,aAyBPQ,UA/CM,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KAC3BC,EAAQF,EAARE,IADsCC,EAEhBF,EAAKG,kBAA3BC,EAFsCF,EAEtCE,MAAOC,EAF+BH,EAE/BG,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,gBAITE,EAAUH,EACbI,OAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,OACvCC,IAAI,SAAAJ,GAAI,OAAIlB,EAAAuB,EAAAC,cAACnB,EAAA,EAAD,CAAUoB,IAAKP,EAAKC,KAAKO,GAAIC,KAAMT,EAAKC,SAEvD,OACEnB,EAAAuB,EAAAC,cAAA,WACExB,EAAAuB,EAAAC,cAAA,UACGT,EADH,IACcf,EAAAuB,EAAAC,cAAA,QAAMI,MAAO,CAAEC,WAAY,cAA3B,IAA4CnB,EAA5C,MAEbM,EACDhB,EAAAuB,EAAAC,cAACrB,EAAA,EAAD,CAAiB2B,KAAMC,MALzB,IAKoC/B,EAAAuB,EAAAC,cAACtB,EAAA,KAAD,CAAM8B,GAAG,SAAT,qDCvBxC,IAAAjC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAuC,EAAAvC,EAAA,GAIMwC,EAAYC,IAAOC,GAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,4CAKTK,EAAgBL,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,+JACH,SAAAO,GAAK,OAAIA,EAAMC,MAAMC,KAAKC,aAQ3BjD,EAAA,WAAAW,GAAc,IAAXoB,EAAWpB,EAAXoB,KAEdmB,EAGEnB,EAHFmB,QACUC,EAERpB,EAFFqB,OAAUD,KAHeE,EAKvBtB,EADFP,YAAe8B,EAJUD,EAIVC,MAAO7B,EAJG4B,EAIH5B,KAGxB,OACErB,EAAAuB,EAAAC,cAACgB,EAAD,KACExC,EAAAuB,EAAAC,cAACU,EAAD,KACElC,EAAAuB,EAAAC,cAACtB,EAAA,KAAD,CAAM8B,GAAIe,GAAOG,IAEnBlD,EAAAuB,EAAAC,cAAA,aAAQH,GACRrB,EAAAuB,EAAAC,cAAA,KAAG2B,wBAAyB,CAAEC,OAAQN","file":"component---src-templates-tag-template-js-5e312af0549f269e2e70.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTags } from '@fortawesome/free-solid-svg-icons';\r\nimport PostLink from '../components/PostLink';\r\n\r\nconst TagsTemplate = ({ pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? '' : 's'\r\n  } tagged with `;\r\n\r\n  const content = edges\r\n    .filter(edge => !!edge.node.frontmatter.date)\r\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        {tagHeader} <span style={{ fontFamily: 'monospace' }}>\"{tag}\"</span>\r\n      </h3>\r\n      {content}\r\n      <FontAwesomeIcon icon={faTags} /> <Link to=\"/tags\">Show all tags</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TagsTemplate;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nconst PostTitle = styled.h3`\r\n  margin-top: 1rem;\r\n  margin-bottom: 0.25rem;\r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  background: ${props => props.theme.card.background};\r\n  box-shadow: 1px 0px 50px #0000001a;\r\n  border-radius: 6px;\r\n  padding: 16px;\r\n  margin-bottom: 48px;\r\n  transition: background 150ms cubic-bezier(0.55, 0, 0.1, 1);\r\n`;\r\n\r\nexport default ({ post }) => {\r\n  const {\r\n    excerpt,\r\n    fields: { slug },\r\n    frontmatter: { title, date },\r\n  } = post;\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle>\r\n        <Link to={slug}>{title}</Link>\r\n      </PostTitle>\r\n      <small>{date}</small>\r\n      <p dangerouslySetInnerHTML={{ __html: excerpt }} />\r\n    </PostContainer>\r\n  );\r\n};\r\n"],"sourceRoot":""}