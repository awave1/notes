{"version":3,"sources":["webpack:///./src/templates/postTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/navbar.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_ref","data","location","markdownRemark","frontmatter","html","a","createElement","className","title","date","dangerouslySetInnerHTML","__html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Nav","styled","nav","_templateObject","primary","NavContent","div","_templateObject2","NavHeader","Link","_templateObject3","Navbar","siteTitle","sm","react_default","to","Container","layout_templateObject","Layout","_this$props","this","gatsby_browser_entry","Fragment","navbar","site","siteMetadata","_1044757290","Component"],"mappings":"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","file":"component---src-templates-post-template-js-81c771279c4d372863b4.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\n\nexport default function Template({ data, location }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout location={location}>\n      <div className=\"blog-post\">\n        <h1>{frontmatter.title}</h1>\n        <h2>{frontmatter.date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n  background: ${props => (props.primary ? '#202124' : '#fbfbfb')};\n  margin-bottom: 1.45rem;\n`;\n\nconst NavContent = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n`;\n\nconst NavHeader = styled(Link)`\n  color: ${props => (props.primary ? '#fff' : '#202124')};\n  text-decoration: none;\n  text-shadow: none;\n  background-image: none;\n`;\n\nconst Navbar = ({ siteTitle, sm }) => {\n  return (\n    <Nav primary={!sm}>\n      <NavContent>\n        <NavHeader primary={!sm} to=\"/\">\n          {siteTitle}\n        </NavHeader>\n      </NavContent>\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Navbar from './navbar';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0 1.0875rem 1.45rem;\n  padding-top: 0;\n`;\n\nclass Layout extends React.Component {\n  render() {\n    const { children, location } = this.props;\n    const rootPath = '/';\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Navbar\n              siteTitle={data.site.siteMetadata.title}\n              sm={location.pathname !== rootPath}\n            />\n            <Container>{children}</Container>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}