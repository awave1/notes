{"version":3,"sources":["webpack:///./src/templates/PostTemplate.js","webpack:///./src/components/Bio.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","_components_Bio__WEBPACK_IMPORTED_MODULE_6__","GITHUB_USER","GITHUB_REPO","CONTENT_ROOT","EditContainer","styled","a","withConfig","displayName","componentId","PagingContainer","ul","PageLink","Link","Page","props","createElement","style","margin","to","children","Template","_props$data$markdownR","data","markdownRemark","_props$data$markdownR2","frontmatter","path","title","date","html","_props$pageContext","pageContext","prev","next","console","log","editUrl","Fragment","className","dangerouslySetInnerHTML","__html","fields","slug","href","icon","faGithub","marginLeft","simple","BioWrapper","div","Avatar","Image","rhythm","BioText","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_data$site$siteMetada","site","siteMetadata","author","social","fixed","avatar","childImageSharp","alt","marginBottom","twitter","_public_static_d_2222508901_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-post-template-js-7a0f9c9fbff42cbba29b.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport styled from 'styled-components';\nimport 'katex/dist/katex.min.css';\nimport Bio from '../components/Bio';\n\nconst GITHUB_USER = 'awave1';\nconst GITHUB_REPO = 'notes';\nconst CONTENT_ROOT = 'content';\n\nconst EditContainer = styled.a`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  background: none;\n  color: black;\n  font-family: monospace;\n  margin: 1.5rem 0;\n  transition: all 0.1s;\n  font-weight: bold;\n\n  &:hover {\n    color: #1ca086;\n  }\n`;\n\nconst PagingContainer = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  margin: 1.5rem 0;\n`;\n\nconst PageLink = styled(Link)`\n  text-decoration: none;\n  background: none;\n  color: black;\n  font-family: monospace;\n  &:hover {\n    color: #1ca086;\n  }\n`;\n\nconst Page = props => (\n  <li style={{ margin: 0 }}>\n    <PageLink to={props.to}>{props.children}</PageLink>\n  </li>\n);\n\nfunction Template(props) {\n  const {\n    markdownRemark: {\n      frontmatter: { path, title, date },\n      html,\n    },\n  } = props.data;\n  const { prev, next } = props.pageContext;\n  console.log(props.pageContext);\n  const editUrl = `https://github.com/${GITHUB_USER}/${GITHUB_REPO}/edit/master/src/${CONTENT_ROOT}${path}.md`;\n\n  return (\n    <>\n      <div className=\"blog-post\">\n        <h1>{title}</h1>\n        <h2>{date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <PagingContainer>\n          {prev && <Page to={prev.fields.slug}> ￩ {prev.fields.slug}</Page>}\n          {next && <Page to={next.fields.slug}>{next.fields.slug} ￫ </Page>}\n        </PagingContainer>\n        <EditContainer href={editUrl}>\n          <FontAwesomeIcon icon={faGithub} />{' '}\n          <span style={{ marginLeft: '10px' }}>editOnGithub();</span>\n        </EditContainer>\n        <Bio simple />\n      </div>\n    </>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`;\n\nexport default Template;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport styled from 'styled-components';\nimport { rhythm } from '../utils/typography';\n\nconst BioWrapper = styled.div`\n  display: flex;\n`;\n\nconst Avatar = styled(Image)`\n  margin-right: ${rhythm(1 / 2)};\n  margin-bottom: 0;\n  min-width: 60;\n  border-radius: 100%;\n  box-shadow: 0px 0px 25px #0000004d;\n\n  @media screen and (max-width: 310px) {\n    display: none !important;\n  }\n`;\n\nconst BioText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction Bio(props) {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <BioWrapper>\n            <Avatar fixed={data.avatar.childImageSharp.fixed} alt={author} />\n            <BioText>\n              <p style={{ marginBottom: 0 }}>\n                Written by <strong>{author}</strong>.{` `}\n              </p>\n              <p>\n                <a href={`https://twitter.com/${social.twitter}`}>\n                  @awaveawave\n                </a>\n              </p>\n            </BioText>\n          </BioWrapper>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile_pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 60, height: 60) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n"],"sourceRoot":""}