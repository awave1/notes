{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["Tag","pageQuery","TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","list","length","style","listStyle","margin","padding","map","tag","key","fieldValue","to","leKebab","totalCount"],"mappings":"wNAMMA,EAAG,6GAwCIC,EAAS,aAgBPC,UAnDE,SAAC,GAOX,IAAD,IANJC,KACuBC,EAKnB,EALFC,kBAAqBD,MAEHE,EAGhB,EAJFC,KACEC,aAAgBF,MAIdG,EACJL,GAASA,EAAMM,OACb,kBAAIC,MAAO,CAAEC,UAAW,OAAQC,OAAQ,EAAGC,QAAS,IACjDV,EAAMW,KAAI,SAAAC,GAAG,OACZ,YAAChB,EAAD,CAAKiB,IAAKD,EAAIE,YACZ,YAAC,OAAD,CAAMC,GAAE,SAAWC,kBAAQJ,EAAIE,YAAvB,KACLF,EAAIE,WADP,KACqBF,EAAIK,WADzB,UAON,uBACE,kCAGN,OACE,uBACE,YAAC,SAAD,CAAQf,MAAOA,IACf,uBACE,8BACCG","file":"component---src-pages-tags-js-8209b589b41905156503.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport styled from '@emotion/styled';\nimport { leKebab } from '../utils/utils';\n\nconst Tag = styled.li`\n  margin: 1rem 0;\n  font-family: 'Hack', monospace;\n`;\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => {\n  const list =\n    group && group.length ? (\n      <ul style={{ listStyle: 'none', margin: 0, padding: 0 }}>\n        {group.map(tag => (\n          <Tag key={tag.fieldValue}>\n            <Link to={`/tags/${leKebab(tag.fieldValue)}/`}>\n              {tag.fieldValue} ({tag.totalCount})\n            </Link>\n          </Tag>\n        ))}\n      </ul>\n    ) : (\n      <div>\n        <h2>No Tags</h2>\n      </div>\n    );\n  return (\n    <div>\n      <Helmet title={title} />\n      <div>\n        <h3>Tags</h3>\n        {list}\n      </div>\n    </div>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default TagsPage;\n"],"sourceRoot":""}