{"version":3,"sources":["webpack:///./src/templates/PostTemplate.js","webpack:///./src/components/Bio.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","_components_Bio__WEBPACK_IMPORTED_MODULE_6__","GITHUB_USER","GITHUB_REPO","CONTENT_ROOT","BlogPost","styled","div","withConfig","displayName","componentId","EditContainer","a","PagingContainer","ul","PageLink","Link","Page","props","css","margin","left","right","createElement","style","to","children","Template","_props$data$markdownR","data","markdownRemark","_props$data$markdownR2","frontmatter","path","title","date","html","_props$pageContext","pageContext","prev","next","console","log","editUrl","Fragment","className","dangerouslySetInnerHTML","__html","fields","slug","href","icon","faGithub","marginLeft","simple","BioWrapper","Avatar","Image","rhythm","BioText","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_data$site$siteMetada","site","siteMetadata","author","social","fixed","avatar","childImageSharp","alt","marginBottom","twitter","_public_static_d_2222508901_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-post-template-js-71e6f25ded8414dab0a4.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport styled from 'styled-components';\r\nimport 'katex/dist/katex.min.css';\r\nimport Bio from '../components/Bio';\r\n\r\nconst GITHUB_USER = 'awave1';\r\nconst GITHUB_REPO = 'notes';\r\nconst CONTENT_ROOT = 'content';\r\n\r\nconst BlogPost = styled.div`\r\n  /* transition: all 150ms cubic-bezier(0.55, 0, 0.1, 1); */\r\n`;\r\n\r\nconst EditContainer = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: monospace;\r\n  margin: 1.5rem 0;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst PagingContainer = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nconst PageLink = styled(Link)`\r\n  font-family: monospace;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media screen and (max-width: 426px){\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst Page = props => {\r\n\r\n  const css = {\r\n    margin: `0 ${props.left ? 'auto' : '0'} 0 ${ props.right ? 'auto' : '0' }`,\r\n  };\r\n\r\n  return (\r\n  <li style={css}>\r\n    <PageLink to={props.to}>{props.children}</PageLink>\r\n  </li>);\r\n};\r\n\r\nfunction Template(props) {\r\n  const {\r\n    markdownRemark: {\r\n      frontmatter: { path, title, date },\r\n      html,\r\n    },\r\n  } = props.data;\r\n  const { prev, next } = props.pageContext;\r\n  console.log(props.pageContext);\r\n  const editUrl = `https://github.com/${GITHUB_USER}/${GITHUB_REPO}/edit/master/src/${CONTENT_ROOT}${path}.md`;\r\n\r\n  return (\r\n    <>\r\n      <BlogPost>\r\n        <h1>{title}</h1>\r\n        <h2>{date}</h2>\r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n        <PagingContainer>\r\n          {prev && <Page to={prev.fields.slug} left> ￩ {prev.fields.slug}</Page>}\r\n          {next && <Page to={next.fields.slug} right>{next.fields.slug} ￫ </Page>}\r\n        </PagingContainer>\r\n        <EditContainer href={editUrl}>\r\n          <FontAwesomeIcon icon={faGithub} />{' '}\r\n          <span style={{ marginLeft: '10px' }}>editOnGithub();</span>\r\n        </EditContainer>\r\n        <Bio simple />\r\n      </BlogPost>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Template;\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Image from 'gatsby-image';\r\nimport styled from 'styled-components';\r\nimport { rhythm } from '../utils/Typography';\r\n\r\nconst BioWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Avatar = styled(Image)`\r\n  margin-right: ${rhythm(1 / 2)};\r\n  margin-bottom: 0;\r\n  min-width: 60;\r\n  border-radius: 100%;\r\n  box-shadow: 0px 0px 25px #0000004d;\r\n\r\n  @media screen and (max-width: 310px) {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst BioText = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction Bio(props) {\r\n  return (\r\n    <StaticQuery\r\n      query={bioQuery}\r\n      render={data => {\r\n        const { author, social } = data.site.siteMetadata;\r\n        return (\r\n          <BioWrapper>\r\n            <Avatar fixed={data.avatar.childImageSharp.fixed} alt={author} />\r\n            <BioText>\r\n              <p style={{ marginBottom: 0 }}>\r\n                Written by <strong>{author}</strong>.{` `}\r\n              </p>\r\n              <p>\r\n                <a href={`https://twitter.com/${social.twitter}`}>\r\n                  @awaveawave\r\n                </a>\r\n              </p>\r\n            </BioText>\r\n          </BioWrapper>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst bioQuery = graphql`\r\n  query BioQuery {\r\n    avatar: file(absolutePath: { regex: \"/profile_pic.jpg/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 60, height: 60) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        author\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Bio;\r\n"],"sourceRoot":""}