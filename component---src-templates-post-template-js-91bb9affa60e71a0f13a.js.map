{"version":3,"sources":["webpack:///./src/templates/PostTemplate.js","webpack:///./src/components/Bio.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","GITHUB_USER","GITHUB_REPO","CONTENT_ROOT","EditContainer","styled","a","withConfig","displayName","componentId","Template","props","_props$data$markdownR","data","markdownRemark","_props$data$markdownR2","frontmatter","path","title","date","html","_props$pageContext","pageContext","editUrl","prev","slug","next","createElement","Fragment","className","dangerouslySetInnerHTML","__html","href","icon","faGithub","style","marginLeft","simple","BioWrapper","div","Avatar","Image","rhythm","BioText","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_data$site$siteMetada","site","siteMetadata","author","social","fixed","avatar","childImageSharp","alt","marginBottom","twitter","_public_static_d_2222508901_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,IAAAW,GAAAX,EAAA,KAAAA,EAAA,MAQMY,EAAc,SACdC,EAAc,QACdC,EAAe,UAEfC,EAAgBC,IAAOC,EAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,YAAGJ,CAAH,yLA6CZ,IAAMZ,EAAS,YAYPiB,UAzCf,SAAkBC,GAAO,IAAAC,EAMnBD,EAAME,KAJRC,eAFqBC,EAAAH,EAGnBI,YAAeC,EAHIF,EAGJE,KAAMC,EAHFH,EAGEG,MAAOC,EAHTJ,EAGSI,KAC5BC,EAJmBR,EAInBQ,KAJmBC,EAOMV,EAAMW,YAC7BC,GARiBF,EAOfG,KAPeH,EAOTI,KAPSJ,EAOHK,KACP,sBAAyBzB,EAAzB,IAAwCC,EAAxC,oBAAuEC,EAAec,EAAtF,OAEb,OACEtB,EAAAW,EAAAqB,cAAAhC,EAAAW,EAAAsB,SAAA,KACEjC,EAAAW,EAAAqB,cAAA,OAAKE,UAAU,aACblC,EAAAW,EAAAqB,cAAA,UAAKT,GACLvB,EAAAW,EAAAqB,cAAA,UAAKR,GACLxB,EAAAW,EAAAqB,cAAA,OACEE,UAAU,oBACVC,wBAAyB,CAAEC,OAAQX,KAErCzB,EAAAW,EAAAqB,cAACvB,EAAD,CAAe4B,KAAMT,GACnB5B,EAAAW,EAAAqB,cAAC9B,EAAA,EAAD,CAAiBoC,KAAMC,MAAa,IACpCvC,EAAAW,EAAAqB,cAAA,QAAMQ,MAAO,CAAEC,WAAY,SAA3B,oBAEFzC,EAAAW,EAAAqB,cAAC3B,EAAA,EAAD,CAAKqC,QAAM,uHC7CbC,EAAajC,IAAOkC,IAAVhC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAGJ,CAAH,mBAIVmC,EAASnC,YAAOoC,KAAVlC,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAAGJ,CAAH,qKACMqC,YAAO,KAWnBC,EAAUtC,IAAOkC,IAAVhC,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAGJ,CAAH,yCA+Bb,IAAMuC,EAAQ,aAoBCC,IA9Cf,SAAalC,GACX,OACEmC,EAAAxC,EAAAqB,cAACoB,EAAA,YAAD,CACEC,MAAOJ,EACPK,OAAQ,SAAApC,GAAQ,IAAAqC,EACarC,EAAKsC,KAAKC,aAA7BC,EADMH,EACNG,OAAQC,EADFJ,EACEI,OAChB,OACER,EAAAxC,EAAAqB,cAACW,EAAD,KACEQ,EAAAxC,EAAAqB,cAACa,EAAD,CAAQe,MAAO1C,EAAK2C,OAAOC,gBAAgBF,MAAOG,IAAKL,IACvDP,EAAAxC,EAAAqB,cAACgB,EAAD,KACEG,EAAAxC,EAAAqB,cAAA,KAAGQ,MAAO,CAAEwB,aAAc,IAA1B,cACab,EAAAxC,EAAAqB,cAAA,cAAS0B,GADtB,SAGAP,EAAAxC,EAAAqB,cAAA,SACEmB,EAAAxC,EAAAqB,cAAA,KAAGK,KAAI,uBAAyBsB,EAAOM,SAAvC,mBAZZ/C,KAAAgD","file":"component---src-templates-post-template-js-91bb9affa60e71a0f13a.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport styled from 'styled-components';\nimport 'katex/dist/katex.min.css';\nimport Bio from '../components/Bio';\n\nconst GITHUB_USER = 'awave1';\nconst GITHUB_REPO = 'notes';\nconst CONTENT_ROOT = 'content';\n\nconst EditContainer = styled.a`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  background: none;\n  color: black;\n  font-family: monospace;\n  margin: 1.5rem 0;\n  transition: all 0.1s;\n  font-weight: bold;\n\n  &:hover {\n    color: #1ca086;\n  }\n`;\n\nfunction Template(props) {\n  const {\n    markdownRemark: {\n      frontmatter: { path, title, date },\n      html,\n    },\n  } = props.data;\n  const { prev, slug, next } = props.pageContext;\n  const editUrl = `https://github.com/${GITHUB_USER}/${GITHUB_REPO}/edit/master/src/${CONTENT_ROOT}${path}.md`;\n\n  return (\n    <>\n      <div className=\"blog-post\">\n        <h1>{title}</h1>\n        <h2>{date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <EditContainer href={editUrl}>\n          <FontAwesomeIcon icon={faGithub} />{' '}\n          <span style={{ marginLeft: '10px' }}>editOnGithub();</span>\n        </EditContainer>\n        <Bio simple />\n      </div>\n    </>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`;\n\nexport default Template;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport styled from 'styled-components';\nimport { rhythm } from '../utils/typography';\n\nconst BioWrapper = styled.div`\n  display: flex;\n`;\n\nconst Avatar = styled(Image)`\n  margin-right: ${rhythm(1 / 2)};\n  margin-bottom: 0;\n  min-width: 60;\n  border-radius: 100%;\n  box-shadow: 0px 0px 25px #0000004d;\n\n  @media screen and (max-width: 310px) {\n    display: none !important;\n  }\n`;\n\nconst BioText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction Bio(props) {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <BioWrapper>\n            <Avatar fixed={data.avatar.childImageSharp.fixed} alt={author} />\n            <BioText>\n              <p style={{ marginBottom: 0 }}>\n                Written by <strong>{author}</strong>.{` `}\n              </p>\n              <p>\n                <a href={`https://twitter.com/${social.twitter}`}>\n                  @awaveawave\n                </a>\n              </p>\n            </BioText>\n          </BioWrapper>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile_pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 60, height: 60) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n"],"sourceRoot":""}