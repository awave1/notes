{"version":3,"sources":["webpack:///./src/components/TagList.js","webpack:///./src/templates/PostTemplate.js","webpack:///./src/components/Bio.js","webpack:///./src/utils/common.js"],"names":["List","styled","ul","withConfig","displayName","componentId","Tag","li","props","theme","tag","background","hover","TagList","_ref","icon","tags","length","react_default","a","createElement","index_es","faTags","faTag","style","display","alignItems","map","name","i","key","gatsby_browser_entry","to","leKebab","__webpack_require__","d","__webpack_exports__","pageQuery","GITHUB_USER","GITHUB_REPO","CONTENT_ROOT","BlogPost","div","EditContainer","PagingContainer","PageLink","Link","Page","css","margin","left","right","children","PostHeader","Container","title","date","components_TagList","Template","_props$data$markdownR","data","markdownRemark","_props$data$markdownR2","frontmatter","html","_props$pageContext","pageContext","slug","prev","next","editUrl","Fragment","PostTemplate_PostHeader","className","dangerouslySetInnerHTML","__html","PostTemplate_Page","fields","href","faGithub","marginLeft","Bio","simple","BioWrapper","Avatar","Image","rhythm","BioText","bioQuery","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_data$site$siteMetada","site","siteMetadata","author","social","fixed","avatar","childImageSharp","alt","marginBottom","twitter","_public_static_d_2222508901_json__WEBPACK_IMPORTED_MODULE_1__","module","exports","str","replace"],"mappings":"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","file":"component---src-templates-post-template-js-4fa5c0460ce35719989a.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTags, faTag } from '@fortawesome/free-solid-svg-icons';\r\nimport { leKebab } from '../utils/common';\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Tag = styled.li`\r\n  margin: 0 5px;\r\n  padding: 3px 10px;\r\n  font-size: 0.9em;\r\n  background: ${props => props.theme.tag.background};\r\n  font-family: monospace;\r\n  border-radius: 5px;\r\n  transition: all 150ms cubic-bezier(0.55, 0, 0.1, 1);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.tag.hover.background};\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    margin: 5px 2px;\r\n  }\r\n`;\r\n\r\nconst TagList = ({ tags }) => {\r\n  let icon;\r\n\r\n  if (tags && tags.length > 0) {\r\n    icon =\r\n      tags.length > 1 ? (\r\n        <FontAwesomeIcon icon={faTags} />\r\n      ) : (\r\n        <FontAwesomeIcon icon={faTag} />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      {icon}\r\n      <List>\r\n        {tags.map((name, i) => (\r\n          <Tag key={i}>\r\n            <Link to={`/tags/${leKebab(name)}`}>{name}</Link>\r\n          </Tag>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport styled from 'styled-components';\r\nimport Bio from '../components/Bio';\r\nimport TagList from '../components/TagList';\r\nimport 'katex/dist/katex.min.css';\r\n\r\nconst GITHUB_USER = 'awave1';\r\nconst GITHUB_REPO = 'notes';\r\nconst CONTENT_ROOT = 'content';\r\n\r\nconst BlogPost = styled.div`\r\n  /* transition: all 150ms cubic-bezier(0.55, 0, 0.1, 1); */\r\n`;\r\n\r\nconst EditContainer = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: monospace;\r\n  margin: 1.5rem 0;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst PagingContainer = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nconst PageLink = styled(Link)`\r\n  font-family: monospace;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media screen and (max-width: 426px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst Page = props => {\r\n  const css = {\r\n    margin: `0 ${props.left ? 'auto' : '0'} 0 ${props.right ? 'auto' : '0'}`,\r\n  };\r\n\r\n  return (\r\n    <li style={css}>\r\n      <PageLink to={props.to}>{props.children}</PageLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst PostHeader = props => {\r\n  const Container = styled.div`\r\n    margin: 1rem 0;\r\n\r\n    h1 {\r\n      margin: 0;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{props.title}</h1>\r\n      <small>{props.date}</small>\r\n      <TagList tags={props.tags} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction Template(props) {\r\n  const {\r\n    markdownRemark: {\r\n      frontmatter: { title, date, tags },\r\n      html,\r\n    },\r\n  } = props.data;\r\n  const { slug, prev, next } = props.pageContext;\r\n\r\n  const editUrl = `https://github.com/${GITHUB_USER}/${GITHUB_REPO}/edit/master/src/${CONTENT_ROOT}${slug}.md`;\r\n\r\n  return (\r\n    <>\r\n      <BlogPost>\r\n        <PostHeader title={title} date={date} tags={tags} />\r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n        <PagingContainer>\r\n          {prev && (\r\n            <Page to={prev.fields.slug} left>\r\n              {' '}\r\n              ￩ {prev.fields.slug}\r\n            </Page>\r\n          )}\r\n          {next && (\r\n            <Page to={next.fields.slug} right>\r\n              {next.fields.slug} ￫{' '}\r\n            </Page>\r\n          )}\r\n        </PagingContainer>\r\n        <EditContainer href={editUrl}>\r\n          <FontAwesomeIcon icon={faGithub} />{' '}\r\n          <span style={{ marginLeft: '10px' }}>editOnGithub();</span>\r\n        </EditContainer>\r\n        <Bio simple />\r\n      </BlogPost>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Template;\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Image from 'gatsby-image';\r\nimport styled from 'styled-components';\r\nimport { rhythm } from '../utils/Typography';\r\n\r\nconst BioWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Avatar = styled(Image)`\r\n  margin-right: ${rhythm(1 / 2)};\r\n  margin-bottom: 0;\r\n  min-width: 60;\r\n  border-radius: 100%;\r\n  box-shadow: 0px 0px 25px #0000004d;\r\n\r\n  @media screen and (max-width: 310px) {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst BioText = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction Bio(props) {\r\n  return (\r\n    <StaticQuery\r\n      query={bioQuery}\r\n      render={data => {\r\n        const { author, social } = data.site.siteMetadata;\r\n        return (\r\n          <BioWrapper>\r\n            <Avatar fixed={data.avatar.childImageSharp.fixed} alt={author} />\r\n            <BioText>\r\n              <p style={{ marginBottom: 0 }}>\r\n                Written by <strong>{author}</strong>.{` `}\r\n              </p>\r\n              <p>\r\n                <a href={`https://twitter.com/${social.twitter}`}>\r\n                  @awaveawave\r\n                </a>\r\n              </p>\r\n            </BioText>\r\n          </BioWrapper>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst bioQuery = graphql`\r\n  query BioQuery {\r\n    avatar: file(absolutePath: { regex: \"/profile_pic.jpg/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 60, height: 60) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        author\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Bio;\r\n","const leKebab = str => str.replace(/[^A-Za-z0-9\\s]+/g, '').replace(/\\s/g, '-');\r\n\r\nmodule.exports = {\r\n  leKebab,\r\n};\r\n"],"sourceRoot":""}