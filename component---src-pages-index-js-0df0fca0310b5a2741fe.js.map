{"version":3,"sources":["webpack:///./src/components/Card.js","webpack:///./src/pages/index.js"],"names":["PostTitle","PostContainer","Link","props","theme","secondaryColor","card","background","borderColor","hover","CategoryLabel","Card","post","html","fields","slug","category","frontmatter","title","date","description","readingTime","getReadingTime","to","style","marginBottom","IndexPage","content","allMarkdownRemark","edges","filter","edge","node","published","map","key","id","marginTop"],"mappings":"2JAKMA,EAAS,2GAKTC,EAAgB,YAAOC,OAAP,sBAAH,+DAIR,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,iBAJb,gBAKH,SAAAF,GAAK,OAAIA,EAAMC,MAAME,KAAKC,aALvB,mCAOD,SAAAJ,GAAK,OAAIA,EAAMC,MAAME,KAAKE,cAPzB,4HAcC,SAAAL,GAAK,OAAIA,EAAMC,MAAME,KAAKG,MAAMD,cAdjC,MAkBbE,EAAa,kRAoCJC,IArBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEZC,EAGED,EAHFC,KAFuB,EAKrBD,EAFFE,OAAUC,EAHa,EAGbA,KAAMC,EAHO,EAGPA,SAHO,EAKrBJ,EADFK,YAAeC,EAJQ,EAIRA,MAAOC,EAJC,EAIDA,KAAMC,EAJL,EAIKA,YAGxBC,EAAcC,yBAAeT,GAEnC,OACE,YAACZ,EAAD,CAAesB,GAAIR,GACjB,YAACL,EAAD,KAAgBM,GAChB,YAAChB,EAAD,KAAYkB,GACZ,yBACGC,EADH,MACYE,GAEZ,iBAAGG,MAAO,CAAEC,aAAc,WAAaL,M,yGCnB9BM,UAnCf,WAAsB,IA0BdC,EA1Ba,OAEjBC,kBAAqBC,MAyBpBC,QACC,SAAAC,GAAI,QAAMA,EAAKC,KAAKf,YAAYE,MAAQY,EAAKC,KAAKf,YAAYgB,aAE/DC,KAAI,SAAAH,GAAI,OAAI,YAAC,IAAD,CAAMI,IAAKJ,EAAKC,KAAKI,GAAIxB,KAAMmB,EAAKC,UAEnD,OAAO,mBAAKR,MAAO,CAAEa,UAAW,KAAOV,K","file":"component---src-pages-index-js-0df0fca0310b5a2741fe.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport { getReadingTime } from '../utils/utils';\n\nconst PostTitle = styled.h3`\n  margin-top: 0.5rem;\n  margin-bottom: 0.25rem;\n`;\n\nconst PostContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  color: ${props => props.theme.secondaryColor};\n  background: ${props => props.theme.card.background};\n  border: 1px solid;\n  border-color: ${props => props.theme.card.borderColor};\n  border-radius: 6px;\n  padding: 1rem;\n  margin-bottom: 48px;\n  transition: all 150ms cubic-bezier(0.55, 0, 0.1, 1);\n\n  &:hover {\n    border-color: ${props => props.theme.card.hover.borderColor};\n  }\n`;\n\nconst CategoryLabel = styled.span`\n  background: #df3131;\n  position: absolute;\n  color: white;\n  right: 15px;\n  font-size: 0.8rem;\n  top: 0;\n  padding: 3px;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 15ch;\n`;\n\nconst Card = ({ post }) => {\n  const {\n    html,\n    fields: { slug, category },\n    frontmatter: { title, date, description },\n  } = post;\n\n  const readingTime = getReadingTime(html);\n\n  return (\n    <PostContainer to={slug}>\n      <CategoryLabel>{category}</CategoryLabel>\n      <PostTitle>{title}</PostTitle>\n      <small>\n        {date} | {readingTime}\n      </small>\n      <p style={{ marginBottom: '0.5rem' }}>{description}</p>\n    </PostContainer>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Card from '../components/Card';\nimport './css/index.css';\n\nfunction IndexPage() {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    query getAllPosts {\n      allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n              published\n            }\n            fields {\n              slug\n              category\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const content = edges\n    .filter(\n      edge => !!edge.node.frontmatter.date && edge.node.frontmatter.published\n    )\n    .map(edge => <Card key={edge.node.id} post={edge.node} />);\n\n  return <div style={{ marginTop: 45 }}>{content}</div>;\n}\n\nexport default IndexPage;\n"],"sourceRoot":""}