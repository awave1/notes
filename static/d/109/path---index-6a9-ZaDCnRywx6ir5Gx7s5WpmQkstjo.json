{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"d9e59d99-7bd7-5c3d-95cd-dc716979edb4","html":"","frontmatter":{"date":"January 16, 2019","title":"Tutorial: Well Typed Mathematics & Review","description":"","published":false},"fields":{"slug":"/cpsc413/tutorials/tutorial1","category":"cpsc413"}}},{"node":{"id":"c8e84c77-2865-5dd7-829b-b247186fe0b8","html":"<h2>Defining an OS</h2>\n<p>There's no 'precise' definition. It is a layer of software that provides application programs with a better, simpler, cleaner model of the computer. The OS is there to simplify interaction with the hardware. OS manages all resources.</p>\n<p>It is the software that runs all the time (mostly in kernel mode). All other applications need it in order to run (<em>most</em> applications will need it).</p>\n<p>We can look at an OS from two different perspectives:</p>\n<ul>\n<li>an <strong>extended machine</strong></li>\n<li>as a <strong>resource manager</strong></li>\n</ul>\n<p>An OS presents an abstraction mechanism that lets you interact with the hardware.</p>\n<h3>OS - an extended machine</h3>\n<p>Abstraction / generalization is key to managing complexity. First we define and implement the abstractions. For example, files - working with files is easier than dealing with raw disk space. Then, using these abstractions, we write applications and solve problems (e.g. file editor, image viewer). An OS doesn't care what's in the file, it is up to the applications to determine how to use the file.</p>\n<p>The abstractions allow us to mask the ugly hardware and provide nice interfaces instead. Many OS concepts are abstractions, therefore there are some similarities to OOP.</p>\n<h3>OS - a resource manager</h3>\n<p>OS acts as a resource allocator. It multiplexes available resources.</p>\n<ul>\n<li>\n<p>Multiplexing resources in time</p>\n<ul>\n<li>e.g. 3 programs trying to print to the same printer (spooling)</li>\n<li>e.g. 2 programs trying to run at the same time (scheduling)</li>\n</ul>\n</li>\n<li>\n<p>Multiplexing resources in space</p>\n<ul>\n<li>e.g. 2 programs allocating memory</li>\n</ul>\n</li>\n</ul>\n<p>OS manages conflics among multiple programs or users.</p>\n<!--IMPORTANT: syscalls need to be checked-->\n<p>We can also think about OS as a control program. It decides when to run which application. OS monitors improper use and prevents errors. OS is responsible for handling all interrupts and traps.</p>\n<h2>History of Operating Systems</h2>\n<p>OSes often developed by customers instead of HW manufacturers. IBM developed first OS in the 60's.</p>\n<h3>First Generation (1945 - 1955): Vacuum Tubes and no OS</h3>\n<p>Programs were hardwired, later were made on punch cards. Programs were written in machine language. Hardware required complicated wiring. Only single user at a time. Such computers were only able to perform basic calculations. No OS since there was no need for one.</p>\n<h3>Second Generation (1955 - 1965): Transistors and Batch Systems</h3>\n<p>Transistor based mainframe computers replaced old vacuum tube computers. Programs were made with FORTRAN &#x26; COBOL. OSes that were used: FMS (Fortran Monitor System) and IBSYS (IBM OS). Important concept was introduced: <strong>batch systems</strong>.</p>\n<h4>Batch Systems</h4>\n<p>The users of a batch operating system do not interact with the computer directly. Each user prepares his job on an off-line device like punch cards and submits it to the computer operator. To speed up processing, jobs with similar needs are batched together and run as a group. The programmers leave their programs with the operator and the operator then sorts the programs with similar requirements into batches.</p>\n<h3>Third Generation (1965 - 1980): ICs and Multiprogramming</h3>\n<p>Transistors were replaces with Integrated Circuits (ICs). Lots of OSes came out: IBM OS/360, CTSS (by MIT), MULTICS (complicated, but influential), UNIX (inspired by MULTICS). Important concepts:</p>\n<ul>\n<li><strong>multiprogramming</strong>: a different job in each memory partition, CPU execute other jobs, while waiting for the IO of some jobs. Multiple programs could sit in memory.</li>\n<li><strong>spooling</strong> (Simultaneous Peripheral Operation On Line): read jobs from cards to disk, load jobs from disk automatically, no more tapes.</li>\n<li><strong>time-sharing</strong>: multiple users using one computer simultaneously and interactively. Terminals were connected to a central server.</li>\n</ul>\n<h4>Multiprogramming</h4>\n<p>Refers to the idea, if you have more than one program in the memory, processor will switch between the programs when one program is idle.</p>\n<h4>Spooling</h4>\n<p>Spooling is typically used to deal with slow devices/peripherals, e.g. printer. Spooling can be used to deal (somewhat) with deadlocks in concurrent programming.</p>\n<h3>Fourth Generation (1990 - Now): Personal Computers</h3>\n<p>Cheap, mass-produced computers, User friendly interfaces on top of OS.</p>","frontmatter":{"date":"January 15, 2019","title":"Operating Systems: Introduction, History, Basic Concepts","description":"","published":true},"fields":{"slug":"/cpsc457/lec1-basic-concepts","category":"cpsc457"}}},{"node":{"id":"162d223d-922c-5807-9aac-3488f5f3fee5","html":"<p>Heuristic evaluation is a usability engineering method for finding the usability problems in a UI design so that they can be attended to as part of an iterative design process.</p>\n<p>Heuristic evaluation involves having a small set of evaluators examine the interface and judge its compliance with recognized usability principles (the \"heuristics\").</p>\n<p>Heuristic evaluation is performed by having each individual evaluator inspect the interface alone. Only after all evaluations have been completed, the evaluators allowed to communicate and have their findings aggregated. The procedure is important in order to ensure independent and unbiased evaluations from each evaluator.</p>\n<!--todo: finish-->\n<h2>Heuristics</h2>\n<p>A heuristic is a rule of thumb</p>\n<blockquote>\n<p>Never chase after a bus, another one is coming</p>\n</blockquote>\n<h3>1. Visibility of system status</h3>\n<!--todo: finish-->\n<h3>2. Match between system and the real world</h3>\n<!--todo: finish-->\n<h3>3. User control and freedom</h3>\n<p>Users often choose system function by mistake and will need a clearly marked \"exit\" to leave the unwanted state without having to go through an extended dialogue.</p>\n<h3>4. Consistency and standards</h3>\n<p>Users should not have to wonder whether different words, situations, or actions mean the same thing.</p>\n<h3>5. Error prevention</h3>\n<p>Even better than good error messages is a careful design which prevents a problem from occuring in the first place.</p>\n<h3>6. Recognition rather than recall</h3>\n<p>Minimize the user's memoryload by making objects, actions, and options visible. The user should not have to remember information from one part of the dialogue to another.</p>\n<h3>7. Flexibility and efficiency of use</h3>\n<p>Accelerators - unseen by the novice user - may often speed up the interaction for the expert user such that the system can cater to both inexperienced and experienced users. Allow users to tailor frequent actions.</p>\n<h3>8. Aesthetic and minimalist design</h3>\n<!--todo: finish-->\n<h3>9. Help users recognize, dianose, and recover from errors</h3>\n<!--todo: finish-->\n<h3>10. Help and documentation</h3>\n<!--todo: finish-->","frontmatter":{"date":"January 15, 2019","title":"Heuristic Evaluation","description":"","published":false},"fields":{"slug":"/cpsc481/lec2-heuristic-eval","category":"cpsc481"}}},{"node":{"id":"c9ced158-54a0-55c7-8b0f-5cf4a1531ca6","html":"<h2>What is the Internet?</h2>\n<p>The Internet is a computer network that interconnects millions of devices throughout the world. All of these devices are called <strong>hosts</strong> or <strong>end systems</strong>.</p>\n<p>End systems are connected together by a network of <strong>communication links</strong> and <strong>packet switches</strong>. Different links can transmit data at different rates, with the <strong>transmission rate</strong> of a link measured in bps (bits/second). When one host sends data to another, the sending host segments the data and adds header bytes to each segment. The resulting packages of information, called <strong>packets</strong>, are then sent through the network to the destination host, where they are reassembled into the original data.</p>\n<p>A packet switch takes a packet arriving on one of its incoming communication links and forwards packeton one of its outgoing communication links. <strong>Routers</strong> and <strong>link-layer switches</strong> are used the most for forwarding packets toward their ultimate destinations.</p>\n<h3>A Services Description</h3>\n<p>End systems attached to the Internet provide <strong>API</strong> that specifies how a program running on one end of the system asks the Internet to deliver data to a specific destination program running on another end system.</p>\n<h3>Network Protocols</h3>\n<p>A <strong>protocol</strong> defines the format and the order of messages exhanged between two or more communicating entities, as well as the actions taken on the transmission and/or receipt of a message or other event.</p>\n<h2>The Network Edge</h2>\n<p>Network edge contains hosts, clients and servers. Servers often in data centers. At the edge, networks organized as small <strong>access networks</strong>. Edge is connected to the core through <strong>edge routers</strong>.</p>\n<h3>Access networks</h3>\n<p><strong>Access network</strong> is the network that physically connects an end system to the first router (known as <strong>edge router</strong>) on a path from the end system to any other end system.</p>\n<h4>Digital Subscriber Line (DSL)</h4>\n<p>A residence typically obtains DSL Internet access from the same telephone company that provides its wired local phone. Each customer's DSL modem uses the same telephone cable. DSL connection therefore is dedicated to the user (e.g. not shared like cable).</p>\n<h2>The Network Core</h2>\n<p>The core is a mesh of interconnected routers. <strong>Packet-switching</strong>: hosts break down data in packages.</p>\n<h3>Packet-switching</h3>\n<p>Delay is calculated using this formula: <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>=</mo><mfrac><mi>L</mi><mi>R</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">D = \\frac{L}{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.217331em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.872331em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>End to end (E2E) transmission delay, with router in the midle:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi>L</mi><mi>R</mi></mfrac><mo>+</mo><mfrac><mi>L</mi><mi>R</mi></mfrac><mo>=</mo><mfrac><mrow><mn>2</mn><mi>L</mi></mrow><mi>R</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{L}{R} + \\frac{L}{R} = \\frac{2L}{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathdefault\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<h3>Transmitting Multiple Packets</h3>\n<p>If we have to send N packets:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">N packets\n[A] --- (R) --- [B]</code></pre></div>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>=</mo><mi>N</mi><mo>×</mo><mfrac><mi>L</mi><mi>R</mi></mfrac><mo>+</mo><mfrac><mi>L</mi><mi>R</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">D = N \\times \\frac{L}{R} + \\frac{L}{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<h3>Delay, Loss, and Throughput in Packet-Switched Networks</h3>\n<h3>Circuit Switching</h3>","frontmatter":{"date":"January 14, 2019","title":"Computer Networks and the Internet","description":"","published":false},"fields":{"slug":"/cpsc441/lec1-introduction","category":"cpsc441"}}},{"node":{"id":"1008ee24-8012-572c-8237-b2f014f594f2","html":"<p>Computer security focuses on three fundamental questions:</p>\n<ul>\n<li>What assets are we protecting?</li>\n<li>How are those assets threatened?</li>\n<li>What can we do to counter those threats?</li>\n</ul>\n<h2>Security for Individuals</h2>\n<p>Information security we want/expect from our personal computers and devices</p>\n<ul>\n<li>Our private data is not seen by others, and we want to define what 'others' means.</li>\n<li>Our data remains unchanged</li>\n<li>\n<p>We can access our data when we want</p>\n<ul>\n<li>Access is important</li>\n</ul>\n</li>\n</ul>\n<p>Therefore, we want <strong>c</strong>onfidentiality + <strong>i</strong>ntegrity + <strong>a</strong>vialability = CIA (lol).</p>\n<h3>Example</h3>\n<p>Given a company, what will require protection? From what/whom?</p>\n<p><strong>Confidentiality</strong>:</p>\n<ul>\n<li>Stored data</li>\n<li>Communication (data in-flight)</li>\n</ul>\n<p><strong>Integrity</strong>:</p>\n<ul>\n<li>All stored data, all communication</li>\n</ul>\n<h2>Computer Security Overview</h2>\n<p>The NIST defines the term <strong>Computer Security</strong> as</p>\n<blockquote>\n<p>The protection afforded to an automated information system in order to attain the applicable objectives of preserving the integrity, availability and confidentiality of information system resources.</p>\n</blockquote>\n<p>That includes hardware, software, firmware, information/data, and telecommunications.</p>\n<h3>Key Security Concepts</h3>\n<p><strong>Confidentiality</strong>:</p>\n<ul>\n<li>Preserving authorized restriction on information access and disclose, including means for protecting personal privacy and proprietary information.</li>\n</ul>\n<p><strong>Integrity</strong>:</p>\n<ul>\n<li>Guarding against improper information modification or destruction, including ensuring information nonrepudiation and authenticity.</li>\n</ul>\n<p><strong>Availability</strong>:</p>\n<ul>\n<li>Ensuring timely and reliable access to, and use of, information.</li>\n</ul>\n<p>Computer security is both fascinating and complex. Requirements seem straightforward, but the mechanisms used to meet those requirements can be complex and subtle. When developing a security mechanisms, one must always consider potential attacks (often unexpected) on such mechanism. Procedures used to provide particular services are often counter-intuitive. It is necessary to decide where to use which security mechanisms (both logical &#x26; physical). Security mechanisms typically involve more than a particular algorithm or protocol, but also require participants to have secret information, leading to issues of creation, distribution, and protection of that secret information.</p>\n<p>Computer security is essentially a battle between perpetrator who tries to find weaknesses and the designer or administrator who tries to close them. Attackers only need to find a single weakness, whereas the developer needs to find all the weaknesses. Many users percieve little benefit from security investment until a failure occurs.</p>\n<p>Security requires regular monitoring which is difficult in today's short term environment. Unfortunately, security is still too often an afterthought - incorpotated after the design is complete. <strong>Security is a process, never a finished product</strong>.</p>\n<h3>Terminology</h3>\n<ul>\n<li><strong>adversary</strong> or <strong>threat agent</strong> - an entity that attacks, or threats to, a system</li>\n<li><strong>attack</strong> - an assault on system security that derives from an intelligent threat; a deliberate attempt to evade security services and violate security policy of a system</li>\n<li><strong>countermeasure</strong> - </li>\n<li><strong>risk</strong>: an expectation of loss expressed as the probability that a particular threat will exploit a particular vulnerability with a particular harmful result</li>\n<li><strong>security policy</strong> - a set of rules and practices that specifies how a system or organization provides security services to protect sensitive and critical system resources</li>\n<li><strong>system resource</strong> or <strong>asset</strong> - </li>\n<li><strong>threat</strong> - a potential for violation of security, which exists when there is a circumstance, capability, or action that could breach security and cause harm.</li>\n<li><strong>vulnerability</strong> - </li>\n</ul>\n<h4>Concepts and their relationships</h4>\n<!--todo: image-->\n<h3>Vulnerability, Threats and Attacks</h3>\n<p>General vulnerability categories:</p>\n<ul>\n<li>Corrupted - e.g. does the wrong thing, stores the wrong data (loss of integrity)</li>\n<li>Leaky - revealing partial information (loss of confidentiality)</li>\n<li>Unavailable or very slow - system gets slow &#x26; overwhelmed (loss of availability)</li>\n</ul>\n<p>Threats:</p>\n<ul>\n<li>Represent potential security harm</li>\n</ul>\n<p>Attacks</p>\n<ul>\n<li>Attacks are threats carried out</li>\n<li>Passive or active attempts to alter/affect system resources</li>\n</ul>\n<h3>Countermeasures</h3>\n<p>Countermeasures are actions taken to mitigate or deal with an attack.</p>\n<ul>\n<li>prevention</li>\n<li>detection/response</li>\n<li>recovery</li>\n<li>\n<p>residual vulnerabilities - countermeasures can introduce new vulnerability (e.g. Spectre vulnerability)</p>\n<ul>\n<li>Goal is to minimize residuals</li>\n</ul>\n</li>\n</ul>\n<h3>Outside and Inside Attacks</h3>\n<p>Who carries out attack?</p>\n<p><strong>Insider</strong>:</p>\n<ul>\n<li>Someone authorized to use the system</li>\n<li>Disgruntled employee?</li>\n</ul>\n<p><strong>Outsider</strong>:</p>\n<ul>\n<li>Someone who is not authorized to use the system</li>\n</ul>\n<h3>Threat Consqeuences</h3>\n<h4>Unauthorized disclousure</h4>\n<p>A circumstance or event whereby an entity gains access to data for which the entity is not authorized.</p>\n<p><strong>Unauthorized disclosure</strong> is a threat to confidentiality.</p>\n<ul>\n<li>Exposure</li>\n<li>Interception</li>\n<li>Inference</li>\n<li>Intrusion</li>\n</ul>\n<h4>Deception</h4>\n<p>A circumstance or event may result in an authorized entity receiving false data and believing it to be true.</p>\n<p><strong>Deception</strong> is a threat to either system or data integrity.</p>\n<ul>\n<li>Masquerade</li>\n<li>Falsification</li>\n<li>Repudiation</li>\n</ul>\n<h4>Disruption</h4>\n<p>A circumstance or event that interrupts or prevents the correct operation of system services and functions.</p>\n<p><strong>Disruption</strong> is a threat to availability or system integrity.</p>\n<ul>\n<li>Incapacitation</li>\n<li>Corruption</li>\n<li>Obstruction</li>\n</ul>\n<h4>Ususrpation</h4>\n<p>A circumstance or event that results in control of system services or functions by an unauthorized entity.</p>\n<p><strong>Usurpation</strong> is a threat to system integrity.</p>\n<ul>\n<li>Misappropriation</li>\n<li>Misuse</li>\n</ul>","frontmatter":{"date":"January 14, 2019","title":"Overview & Terminology","description":"Explorations in Information Security & Privacy","published":false},"fields":{"slug":"/cpsc329/lec1-overview-terminology","category":"cpsc329"}}},{"node":{"id":"4b6d0f15-801e-5e96-bc79-02c3294756af","html":"<h2>About</h2>\n<h2>Characteristics of a good interface</h2>\n<ul>\n<li>People feel <strong>satisfied</strong> when they use them</li>\n<li>People can complete their tasks error-free</li>\n<li>People can complete their tasks quickly</li>\n<li>People can learn how to use the system (and its full functionality) quickly</li>\n</ul>\n<h2>What is Design?</h2>\n<p><strong>Design</strong> is a process of creating of shaping tools or arifacts for direct human use. Design is human centric</p>\n<h3>Design vs. Engineering</h3>\n<p><strong>Engineering</strong>:</p>\n<ul>\n<li>Make a mostly known outcome possible</li>\n<li>Construct a bridge based on specifications</li>\n</ul>\n<p><strong>Design</strong>:</p>\n<ul>\n<li>Envision new possibilities, new outcomes</li>\n<li>Determine what outcome should result among infinite possibilities</li>\n<li>Reliance on process over formulae</li>\n<li>Humans are central actors \"in the loop\"</li>\n<li>Context (cultural and temporal) matters</li>\n</ul>\n<h3>Design vs. Art</h3>\n<p><strong>Design</strong>:</p>\n<ul>\n<li>\n<p>(as we regard it) concerns the creation of something <strong>useful</strong> and <strong>usable</strong></p>\n<ul>\n<li>Useful:</li>\n<li>Usable:</li>\n</ul>\n</li>\n</ul>\n<!--@TODO: Finish-->\n<h2>Why should we care?</h2>\n<p>There's shift of attention in computer science: Algorithms <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> People</p>\n<h2>What is 'designed'?</h2>\n<p>Anything consciously intended for human use is designed.</p>\n<h2>Why is design hard?</h2>\n<p>A lot of different end-users and everyone is different. It is impossible to satisfy everyone. People appropriate technology unexpectedly.</p>\n<p>Judging/predicting which design will be successful is hard. There are infinite possibilities what is good. Design involves making trade-offs. Good designs are non-obvious: we need to try out and experiment.</p>\n<h3>People make errors: two kinds of them</h3>\n<ul>\n<li><strong>Slips</strong>: Error in carrying out an action (e.g motor action) </li>\n<li><strong>Mistake</strong></li>\n</ul>\n<p>Good designers help people avoid mistakes.</p>\n<h2>Core design skills</h2>\n<p>To synthesize a solution from all of the relevant constraints, understanding everything that will make a difference to the result.</p>\n<p>To frame or reframe, the problem and objective.</p>\n<p>To create and envision alternatives.</p>\n<h2>\"This user is not like me\"</h2>\n<!--TODO: finish-->\n<h2>User-Centered Design (UCD)</h2>\n<!--TODO: finish-->","frontmatter":{"date":"January 10, 2019","title":"Introduction: Human Computer Interaction","description":"","published":false},"fields":{"slug":"/cpsc481/lec1-intro","category":"cpsc481"}}},{"node":{"id":"5dcb16a8-3686-5161-bad4-be9b67eef586","html":"<blockquote>\n<p>Theory is when one understands everything but nothing works. Practice is when everything works but nobody understands why.</p>\n</blockquote>\n<h2>Stable Matching Problem</h2>\n<p>The Stable Matching Problem originated when David Gale and Lloyd Shapley, two mathematical economists decided to design a college admissions process, or a job recruiting process that was <em>self-enforcing</em>.</p>\n<p>Given a set of preferences among employers and applicants, can we assign applicants to employers so that for every employer <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, and every applicant <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>, who is not scheduled to work for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, at least one of the following two things is the case?</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> prefers every one of its accepted applicants to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>; or</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> prefers her current situation over working for employer <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span>.</li>\n</ol>\n<p>If this holds, the outcome is stable: individual self-interest will prevent any applicant/employer deal from being made behind the scenes.</p>\n<hr>\n<p><strong>Goal</strong>. Given a set of preferences among hospitals and med-school students, design a <em>self-reinforcing</em> admissions process.</p>\n<p><strong>Unstable pair</strong>. Hospital <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> and student <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> form an <em>unstable pair</em> if both:</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> prefers <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> to one of its admitted students.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> prefers <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> to assigned hospital.</li>\n</ol>\n<p><strong>Stable assignment</strong>. Assignment with no unstable pairs.</p>\n<ul>\n<li>Natural and desirable condition.</li>\n<li>Individual self-interest prevents any side deals.</li>\n</ul>\n<p>Consider a set <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo>=</mo><mo>{</mo><msub><mi>h</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>h</mi><mi>n</mi></msub><mo>}</mo></mrow><annotation encoding=\"application/x-tex\">H = \\{h_1, \\ldots, h_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> hospitals, and a set <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>S</mi><mo>=</mo><mo>{</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>n</mi></msub><mo>}</mo></mrow><annotation encoding=\"application/x-tex\">S = \\{s_1, \\ldots,s_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> students. Let <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo>×</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">H \\times S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> denote the set of all possible ordered pairs of the form <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>h</mi><mo separator=\"true\">,</mo><mi>s</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(h, s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">h</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mo>∈</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">h \\in H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">s \\in S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span>.</p>\n<h3>Matching &#x26; Perfect Matching</h3>\n<ul>\n<li>A <em>matching</em> set <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is a set of ordered pairs, each from <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo>×</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">H \\times S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span>, with the property that each member of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> and each members of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> appears in at most one pair in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>.</li>\n<li>A <mark><em>perfect matching</em></mark> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>M</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">M&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is a matching with the property that each member of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> and each member of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> appears in <em>exactly</em> one pair in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>M</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">M&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>. A matching <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is <strong>perfect</strong> if:</li>\n</ul>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>M</mi><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi>H</mi><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">|M| = |H| = |S| = n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span></span>\n<h3>Unstable Pair</h3>\n<p>Given a perfect matching <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, hospital <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> and student <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> form an <strong>unstable pair</strong> if both:</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> prefers <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> to matched student</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> prefers <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> to matched student</li>\n</ol>\n<hr>\n<p>Given all that information, we can describe <mark>stable matching</mark>:</p>\n<p>A <strong>stable matching</strong> is a perfect matching with no unstable pairs. Stable matching problem can be described as:</p>\n<blockquote>\n<p>Given the preference list of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> hospitals and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> students, find a stable matching (if one exists).</p>\n</blockquote>\n<p>It is not obvious a priori if stable matchings always exist.</p>\n<h2>Gale-Shapley Algorithm</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function stableMatching {\n  // Initialize all m ∈ M and w ∈ W to free\n  while ∃ hospital h is unmatched and still has a student s to propose to {\n     s = first student on h’s list to whom h has not yet proposed\n     if s is unmatched\n       (h, s) added to M\n     else some pair (h&#39;, s) already exists\n       if s prefers h to h&#39;\n          s rejects h&#39;\n         (h, s) is added to M\n       else\n         (h&#39;, s) remain in M\n  }\n}</code></pre></div>\n<h3>Proof of correctness: Termination</h3>\n<ul>\n<li>Hospitals propose to students in decreasing order of preference</li>\n<li>Once a student is matched, the student never becomes unmatched, only 'trades up'</li>\n</ul>\n<p><strong>Claim</strong>: Algorithm terminates after at most <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> iterations of <code class=\"language-text\">while</code> loop.\n<strong>Proof</strong>: Each time through the <code class=\"language-text\">while</code> loop, a hospital proposes to a new student. Thus, there are at most <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> possible proposals.</p>\n<!--![n(n - 1) + 1 proposals](/content/cpsc413/img/lec1_1.png)-->\n<h3>Proof of correctness: Perfect matching</h3>\n<ol>\n<li>\n<p><strong>Claim</strong>: Gale-Shapley outputs a matching.\n<strong>Proof</strong>:</p>\n<ul>\n<li>Hospitals proposes only if unmatched <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> matched to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\leq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span></span></span></span> 1 student</li>\n<li>Student keeps only best hospital <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> matched to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\leq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span></span></span></span> 1 hospital</li>\n</ul>\n</li>\n<li>\n<p><strong>Claim</strong>: In Gale-Shapley matching, all hospitals get matched.\n<strong>Proof</strong> (by contradiction):</p>\n<ul>\n<li>Suppose that some hospital <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mo>∈</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">h \\in H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> is unmatched upon termination of G-S algorithm</li>\n<li>Then, some student <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">s \\in S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is unmatched upon termination</li>\n<li>Therefore, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> was never proposed to</li>\n<li>However, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> proposes to every student, since <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> ends up unmatched.</li>\n</ul>\n</li>\n<li>\n<p><strong>Claim</strong>: In Gale-Shapley matching, all students get matched.\n<strong>Proof</strong> (by counting):</p>\n<ul>\n<li>By previous claim, all <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> hospitals het matched</li>\n<li>Thus, all <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> students get matched.</li>\n</ul>\n</li>\n</ol>\n<h3>Proof of correctness: Stability</h3>\n<p><strong>Claim</strong>: In G-S matching <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>M</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">M^{*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span>, there are no unstable pairs.\n<strong>Proof</strong>: Consider any pair <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>h</mi><mo separator=\"true\">,</mo><mi>s</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(h, s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">h</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span> that is not in <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>M</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">M^{*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span>:</p>\n<ol>\n<li>\n<p>Case 1: <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> never proposed to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span>:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> prefers its G-S partner to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">s&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> <small>(hospitals propose in decreasing order of preference)</small></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>h</mi><mo separator=\"true\">,</mo><mi>s</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(h, s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">h</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span> is not unstable</li>\n</ul>\n</li>\n<li>\n<p>Case 2: <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> proposed to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> rejected <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> (either right away or later)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> prefers G-S partner <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>h</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">h&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> <small>(students only trade up)</small></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>h</mi><mo separator=\"true\">,</mo><mi>s</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(h, s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">h</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span> is not unstable</li>\n</ul>\n</li>\n</ol>\n<p>In either case, the pair <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>h</mi><mo separator=\"true\">,</mo><mi>s</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">(h, s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">h</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span> is not unstable.</p>\n<hr>\n<p>The Gale-Shapley algorithm guarantees to find a stable matching for <strong>any</strong> problem instance.</p>\n<h2>Extensions</h2>\n<!-- TODO: Finish -->","frontmatter":{"date":"January 10, 2019","title":"Stable Matching","description":"","published":false},"fields":{"slug":"/cpsc413/lec1-stable-matching","category":"cpsc413"}}}]}},"pageContext":{}}