{"version":3,"sources":["webpack:///./src/templates/PostTemplate.js","webpack:///./src/components/Bio.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","GITHUB_USER","GITHUB_REPO","CONTENT_ROOT","BlogPost","styled","div","withConfig","displayName","componentId","EditContainer","a","PagingContainer","ul","PageLink","Link","Page","props","css","margin","left","right","createElement","style","to","children","Template","_props$data$markdownR","data","markdownRemark","_props$data$markdownR2","frontmatter","path","title","date","html","_props$pageContext","pageContext","prev","next","console","log","editUrl","Fragment","className","dangerouslySetInnerHTML","__html","fields","slug","href","icon","faGithub","marginLeft","simple","BioWrapper","Avatar","Image","rhythm","BioText","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_data$site$siteMetada","site","siteMetadata","author","social","fixed","avatar","childImageSharp","alt","marginBottom","twitter","_public_static_d_2222508901_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-post-template-js-a0513074828d13719ffc.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport styled from 'styled-components';\nimport Bio from '../components/Bio';\nimport 'katex/dist/katex.min.css';\n\nconst GITHUB_USER = 'awave1';\nconst GITHUB_REPO = 'notes';\nconst CONTENT_ROOT = 'content';\n\nconst BlogPost = styled.div`\n  /* transition: all 150ms cubic-bezier(0.55, 0, 0.1, 1); */\n`;\n\nconst EditContainer = styled.a`\n  display: flex;\n  align-items: center;\n  font-family: monospace;\n  margin: 1.5rem 0;\n  font-weight: bold;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst PagingContainer = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 1.5rem 0;\n`;\n\nconst PageLink = styled(Link)`\n  font-family: monospace;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media screen and (max-width: 426px){\n    font-size: 13px;\n  }\n`;\n\nconst Page = props => {\n\n  const css = {\n    margin: `0 ${props.left ? 'auto' : '0'} 0 ${ props.right ? 'auto' : '0' }`,\n  };\n\n  return (\n  <li style={css}>\n    <PageLink to={props.to}>{props.children}</PageLink>\n  </li>);\n};\n\nfunction Template(props) {\n  const {\n    markdownRemark: {\n      frontmatter: { path, title, date },\n      html,\n    },\n  } = props.data;\n  const { prev, next } = props.pageContext;\n  console.log(props.pageContext);\n  const editUrl = `https://github.com/${GITHUB_USER}/${GITHUB_REPO}/edit/master/src/${CONTENT_ROOT}${path}.md`;\n\n  return (\n    <>\n      <BlogPost>\n        <h1>{title}</h1>\n        <h2>{date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <PagingContainer>\n          {prev && <Page to={prev.fields.slug} left> ￩ {prev.fields.slug}</Page>}\n          {next && <Page to={next.fields.slug} right>{next.fields.slug} ￫ </Page>}\n        </PagingContainer>\n        <EditContainer href={editUrl}>\n          <FontAwesomeIcon icon={faGithub} />{' '}\n          <span style={{ marginLeft: '10px' }}>editOnGithub();</span>\n        </EditContainer>\n        <Bio simple />\n      </BlogPost>\n    </>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`;\n\nexport default Template;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport styled from 'styled-components';\nimport { rhythm } from '../utils/Typography';\n\nconst BioWrapper = styled.div`\n  display: flex;\n`;\n\nconst Avatar = styled(Image)`\n  margin-right: ${rhythm(1 / 2)};\n  margin-bottom: 0;\n  min-width: 60;\n  border-radius: 100%;\n  box-shadow: 0px 0px 25px #0000004d;\n\n  @media screen and (max-width: 310px) {\n    display: none !important;\n  }\n`;\n\nconst BioText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction Bio(props) {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <BioWrapper>\n            <Avatar fixed={data.avatar.childImageSharp.fixed} alt={author} />\n            <BioText>\n              <p style={{ marginBottom: 0 }}>\n                Written by <strong>{author}</strong>.{` `}\n              </p>\n              <p>\n                <a href={`https://twitter.com/${social.twitter}`}>\n                  @awaveawave\n                </a>\n              </p>\n            </BioText>\n          </BioWrapper>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile_pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 60, height: 60) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n"],"sourceRoot":""}