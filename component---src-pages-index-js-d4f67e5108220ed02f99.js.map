{"version":3,"sources":["webpack:///./src/components/animatedIcon.js","webpack:///./src/components/postLink.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/navbar.js","webpack:///./src/components/layout.js"],"names":["AnimatedIcon","props","_this","_React$Component","call","this","iconRef","React","createRef","componentDidMount","body","styler","current","querySelector","leftEye","rightEye","showEye","tween","from","scaleY","to","duration","blinkEye","flip","leftEyeAction","action","_ref","complete","start","update","set","setInterval","rightEyeAction","_ref2","y","easings","easing","easeInOut","yoyo","Infinity","merge","render","react_default","a","createElement","ref","style","alignSelf","Ghost","Object","assign","mood","Component","postLink","post","gatsby_browser_entry","frontmatter","path","title","date","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","edges","data","allMarkdownRemark","Posts","location","filter","edge","node","map","key","id","layout","animatedIcon","size","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Nav","styled","nav","_templateObject","NavContent","div","_templateObject2","NavHeader","Link","_templateObject3","Navbar","siteTitle","usePrimaryNav","Container","layout_templateObject","Layout","Fragment","navbar","site","siteMetadata","_1044757290"],"mappings":"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","file":"component---src-pages-index-js-d4f67e5108220ed02f99.js","sourcesContent":["import React from 'react';\nimport { Ghost } from 'react-kawaii';\nimport { styler, tween, merge, action, easing } from 'popmotion';\n\nclass AnimatedIcon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.iconRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const body = styler(this.iconRef.current.querySelector('svg'));\n\n    const leftEye = styler(\n      this.iconRef.current.querySelector(\n        '#kawaii-face__eyes__circle circle:first-child'\n      )\n    );\n\n    const rightEye = styler(\n      this.iconRef.current.querySelector(\n        '#kawaii-face__eyes__circle circle:last-child'\n      )\n    );\n\n    const showEye = tween({\n      from: { scaleY: 0 },\n      to: { scaleY: 1 },\n      duration: 200,\n    });\n\n    const blinkEye = tween({\n      from: { scaleY: 1 },\n      to: { scaleY: 0.3 },\n      duration: 125,\n      flip: 1,\n    });\n\n    const leftEyeAction = action(({ complete }) => {\n      showEye.start({\n        update: leftEye.set,\n        complete: () => {\n          complete();\n          setInterval(() => blinkEye.start({ update: leftEye.set }), 2000);\n        },\n      });\n    });\n\n    const rightEyeAction = action(({ complete }) => {\n      showEye.start({\n        update: rightEye.set,\n        complete: () => {\n          complete();\n          setInterval(() => blinkEye.start({ update: rightEye.set }), 2000);\n        },\n      });\n    });\n\n    tween({\n      from: { y: 0 },\n      to: { y: 20 },\n      easings: easing.easeInOut,\n      duration: 1650,\n      yoyo: Infinity,\n    }).start(body.set);\n\n    merge(leftEyeAction, rightEyeAction).start();\n  }\n\n  render() {\n    return (\n      <div ref={this.iconRef} style={{ alignSelf: 'center' }}>\n        <Ghost {...this.props} mood=\"happy\" />\n      </div>\n    );\n  }\n}\n\nexport default AnimatedIcon;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport default ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </div>\n);\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport AnimatedIcon from '../components/animatedIcon';\nimport Layout from '../components/layout';\nimport PostLink from '../components/postLink';\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location,\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date)\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <Layout>\n      <AnimatedIcon size={100} />\n      <div>{Posts}</div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n  background: #202124;\n  margin-bottom: 1.45rem;\n`;\n\nconst NavContent = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n`;\n\nconst NavHeader = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  text-shadow: none;\n  background-image: none;\n`;\n\nconst Navbar = ({ siteTitle, usePrimaryNav }) => {\n  return (\n    <Nav>\n      <NavContent>\n        <NavHeader to=\"/\">{siteTitle}</NavHeader>\n      </NavContent>\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Navbar from './navbar';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0 1.0875rem 1.45rem;\n  padding-top: 0;\n`;\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Navbar siteTitle={data.site.siteMetadata.title} />\n            <Container>{children}</Container>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}