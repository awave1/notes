{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/utils/common.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_utils_common__WEBPACK_IMPORTED_MODULE_4__","Tag","styled","li","withConfig","displayName","componentId","TagsPage","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","a","createElement","style","listStyle","margin","padding","map","tag","key","fieldValue","to","leKebab","totalCount","module","exports","str","replace"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,GAAAW,EAAAX,EAAA,KAMMY,EAAMC,IAAOC,GAAVC,WAAA,CAAAC,YAAA,YAAAC,YAAA,eAAGJ,CAAH,0CAgCIT,EAAS,aAgBPc,UA3CE,SAAAC,GAOX,IAAAC,EAAAD,EANJE,KACuBC,EAKnBF,EALFG,kBAAqBD,MAEHE,EAGhBJ,EAJFK,KACEC,aAAgBF,MAIpB,OACElB,EAAAqB,EAAAC,cAAA,WACEtB,EAAAqB,EAAAC,cAACnB,EAAA,OAAD,CAAQe,MAAOA,IACflB,EAAAqB,EAAAC,cAAA,WACEtB,EAAAqB,EAAAC,cAAA,kBACAtB,EAAAqB,EAAAC,cAAA,MAAIC,MAAO,CAAEC,UAAW,OAAQC,OAAQ,EAAGC,QAAS,IACjDV,EAAMW,IAAI,SAAAC,GAAG,OACZ5B,EAAAqB,EAAAC,cAAChB,EAAD,CAAKuB,IAAKD,EAAIE,YACZ9B,EAAAqB,EAAAC,cAACpB,EAAA,KAAD,CAAM6B,GAAE,SAAWC,kBAAQJ,EAAIE,YAAvB,KACLF,EAAIE,WADP,KACqBF,EAAIK,WADzB,uCCzBdC,EAAOC,QAAU,CACfH,QAHc,SAAAI,GAAG,OAAIA,EAAIC,QAAQ,mBAAoB,IAAIA,QAAQ,MAAO","file":"component---src-pages-tags-js-5c73110178df43be3d3f.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport styled from 'styled-components';\r\nimport { leKebab } from '../utils/common';\r\n\r\nconst Tag = styled.li`\r\n  margin: 1rem 0;\r\n  font-family: monospace;\r\n`;\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Helmet title={title} />\r\n      <div>\r\n        <h3>Tags</h3>\r\n        <ul style={{ listStyle: 'none', margin: 0, padding: 0 }}>\r\n          {group.map(tag => (\r\n            <Tag key={tag.fieldValue}>\r\n              <Link to={`/tags/${leKebab(tag.fieldValue)}/`}>\r\n                {tag.fieldValue} ({tag.totalCount})\r\n              </Link>\r\n            </Tag>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TagsPage;\r\n","const leKebab = str => str.replace(/[^A-Za-z0-9\\s]+/g, '').replace(/\\s/g, '-');\r\n\r\nmodule.exports = {\r\n  leKebab,\r\n};\r\n"],"sourceRoot":""}